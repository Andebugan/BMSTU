lock(m)
{
    <Некоторый код>
    \\Доступ к данным в монопольном режиме
    \\Критическая секция кода
}

Или команды вида
lock(m)
unlock(m)

Семафор
    Бинарный (сброшен/установлен)
    Счетный (светофор)

Часто используют массив семафоров (по 1 на рабочий поток):
    Главный поток (диспетчер) выдает задания и переходит в режим ожидания


Фундаментальное ограничение при параллельном программировании - это запрет на 
    одновременную запись в одну ячейку памяти из двух или более потоков.
    Так как это приведет к краху программы.

Поток (например, класс Thread) можно создать
    Thread t = new Thread(...);//... - указатель на работу, а именно делегат
    Далее запускаем поток
    t.tsart(...); //Аргументы для делегата

Аргументы делегата:
    1) [ссылки на] исходные данные
    2) указание, куда класть ответ
    3) мьютекс(ы)   \    ссылки при
    4) семафор      /   необходимости
    5) область ответственности

Критическая секция:
    по возможности минимизировать, чтобы сократить простой вычислительных мощностей

Но существует проблема актуальности данных
Пример:
    поиск тел в массиве из 3N + 2 элментов
    Каждый из них находит loc_max и обновляет glob_max(при необходимости).